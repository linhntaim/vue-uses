{"version":3,"sources":["../../../src/uses/i18n/locale-manager.js"],"names":["LocaleManager","app","importLocaleCallback","defaultLocale","loadedLocales","locale","Promise","resolve","i18n","instance","$i18n","apply","$utils","log","ui","send","setLang","includes","then","m","setLocaleMessage","push"],"mappings":"0tBAAaA,CAAAA,a,yBACT,uBAAYC,GAAZ,CAAiBC,oBAAjB,CAA6D,IAAtBC,CAAAA,aAAsB,2DAAN,IAAM,qCACzD,KAAKF,GAAL,CAAWA,GAAX,CACA,KAAKG,aAAL,CAAqB,CAACD,aAAD,CAArB,CACA,KAAKD,oBAAL,CAA4BA,oBAC/B,C,6CAED,aAAIG,MAAJ,CAAY,gBACR,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAAAC,OAAO,CAAI,CAC1B,GAAMC,CAAAA,IAAI,CAAG,KAAI,CAACP,GAAL,CAASQ,QAAT,CAAkBC,KAA/B,CAEA,GAAIF,IAAI,CAACH,MAAL,GAAgBA,MAApB,CAA4B,CACxBE,OAAO,CAACF,MAAD,CAAP,CACA,MACH,CAED,GAAMM,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,2BACE,KAAI,CAACV,GAAL,CAASQ,QAAT,CAAkBG,MADpB,CACTC,GADS,uBACTA,GADS,CACJC,EADI,uBACJA,EADI,CAGhBD,GAAG,CAACE,IAAJ,CAAS,gBAAkBP,IAAI,CAACH,MAAvB,CAAgC,MAAhC,CAAyCA,MAAlD,CAA0D,QAA1D,EAEAG,IAAI,CAACH,MAAL,CAAcA,MAAd,CACAS,EAAE,CAACE,OAAH,CAAWX,MAAX,EACA,MAAOA,CAAAA,MACV,CARD,CAUA,GAAI,KAAI,CAACD,aAAL,CAAmBa,QAAnB,CAA4BZ,MAA5B,CAAJ,CAAyC,CACrCE,OAAO,CAACI,KAAK,CAACN,MAAD,CAAN,CAAP,CACA,MACH,CAED,KAAI,CAACH,oBAAL,CAA0BG,MAA1B,EAAkCa,IAAlC,CAAuC,SAAAC,CAAC,CAAI,CACxCX,IAAI,CAACY,gBAAL,CAAsBf,MAAtB,CAA8Bc,CAAC,WAA/B,EACA,KAAI,CAACf,aAAL,CAAmBiB,IAAnB,CAAwBhB,MAAxB,EACAE,OAAO,CAACI,KAAK,CAACN,MAAD,CAAN,CACV,CAJD,CAKH,CA5BM,CA6BV,C","sourcesContent":["export class LocaleManager {\r\n    constructor(app, importLocaleCallback, defaultLocale = 'en') {\r\n        this.app = app\r\n        this.loadedLocales = [defaultLocale]\r\n        this.importLocaleCallback = importLocaleCallback\r\n    }\r\n\r\n    set(locale) {\r\n        return new Promise(resolve => {\r\n            const i18n = this.app.instance.$i18n\r\n\r\n            if (i18n.locale === locale) {\r\n                resolve(locale)\r\n                return\r\n            }\r\n\r\n            const apply = () => {\r\n                const {log, ui} = this.app.instance.$utils\r\n\r\n                log.send('changed from ' + i18n.locale + ' to ' + locale, 'locale')\r\n\r\n                i18n.locale = locale\r\n                ui.setLang(locale)\r\n                return locale\r\n            }\r\n\r\n            if (this.loadedLocales.includes(locale)) {\r\n                resolve(apply(locale))\r\n                return\r\n            }\r\n\r\n            this.importLocaleCallback(locale).then(m => {\r\n                i18n.setLocaleMessage(locale, m.default)\r\n                this.loadedLocales.push(locale)\r\n                resolve(apply(locale))\r\n            })\r\n        })\r\n    }\r\n}\r\n"],"file":"locale-manager.js"}